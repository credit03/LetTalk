apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.lettalk.gy"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }




    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //自动删除 unaligned .apks
            applicationVariants.all { variant ->
                variant.assemble.doLast {
                    variant.outputs.each { output ->
                        File unaligned = output.packageApplication.outputFile;
                        File aligned = output.outputFile
                        if (!unaligned.getName().equalsIgnoreCase(aligned.getName())) {
                            println "deleting " + unaligned.getName()
                            unaligned.delete()
                        }
                    }
                }
            }
        }
    }

    dexOptions {
        incremental false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


}

/**
 * 转成studio的module。和eclipse导出的功能是一样的，只是eclipse导出的文件目录不是studio的标准目录,是通过设置sourceset自定义的目录。这个教材可以帮你熟悉studio的目录和eclipse的区别。
 Eclipse   Android Studio
 src ==> [module  name]/src/main/java
 res ==>[module name]/src/main/res
 libs下的jar ==> [module name]/libs
 libs下的so ==>[module name]/src/main/jniLibs
 assets ==> [module name]/src/main/assets
 aidl/ ==>[module name]/src/main/aidl
 rs/ ==> [module name]/src/main/rs
 jni/ ==>[module name]/src/main/jni
 */
repositories {
    flatDir {
        dirs 'libs' //就是你放aar的目录地址
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile('com.android.support:appcompat-v7:23.1.1') {
        exclude module: 'support-annotations'
    }
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.orhanobut:logger:1.4'
    compile 'org.greenrobot:eventbus:3.0.0'
    //bmob-im所需的依赖包
    compile 'cn.bmob.android:androidasync:2.1.6'
    //bmob-sdk:3.4.6需要依赖okhttp（2.4.0）、okio（2.4.0）,而support-v4（23.2.1）和org.apache.http.legacy包是为了兼容Android6.0系统所需
    compile 'cn.bmob.android:bmob-sdk:3.4.6'
    compile('com.android.support:support-v4:23.1.1') {
        exclude module: 'support-annotations'
    }
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okio:okio:1.4.0'
    compile files('libs/BmobNewIM_2.0.4_20160429.jar')
    compile files('libs/universal-image-loader-1.9.5.jar')
    compile name: 'SMSSDK-2.0.2', ext: 'aar'
    compile name: 'SMSSDKGUI-2.0.2', ext: 'aar'
    compile files('libs/BmobSMS_V1.0.1_20150710.jar')
    compile files('libs/commons-codec-1.3.jar')
    compile project(':weiboSDK')
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.json:json:20160212'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.github.ozodrukh:CircularReveal:1.0.5@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-appindexing:8.1.0'
    compile 'com.makeramen:roundedimageview:1.3.0'

    /**
     * gradle1.5.0以上的版本 使用androidanimations库一定要用以下两个版本或更高级的版本
     */
    compile 'com.daimajia.easing:library:1.0.2@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
}
